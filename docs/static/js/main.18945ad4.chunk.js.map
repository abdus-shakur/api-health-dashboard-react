{"version":3,"sources":["components/navbar.jsx","components/availabilityWidget.jsx","adapters/xhr/index.jsx","constants/configurations.jsx","adapters/widgetAdapter.jsx","components/WidgetHolder.jsx","components/sidePane.jsx","pages/homepage/homepage.jsx","reportWebVitals.js","index.js"],"names":["NavBar","className","href","AvailabilityWidget","props","progressBarWidth","width","widgetDetails","availability","metadata","useState","Number","lastUpdated","split","seconds","setSeconds","useEffect","intervalTimer","setInterval","clearInterval","team","envBatch","environment","apiName","statusBatch","status","key","description","progressBar","role","aria-valuenow","aria-valuemin","aria-valuemax","style","totalHits","successHits","type","data-toggle","data-target","aria-expanded","aria-controls","id","map","data","attribute","value","createInstance","axios","getCreateInstanceWithDefaults","defaults","baseURL","Constants","DEFAULT_ENVIRONMENT","WidgetAdapter","updateFunction","options1","url","headers","this","env","method","options","request","then","json","setEnvList","get","res","callWidgetDetails","WidgetHolder","Profile","widgetData","setwidgetData","periodicalFetch","process","data1","SidePane","name","envList","getEnvironmentList","setEnvironment","target","data-focus","envObject","envVariable","onClick","HomePage","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18945ad4.chunk.js","sourcesContent":["\r\nfunction NavBar() {\r\n    return (\r\n        <header className=\"masthead mb-auto\">\r\n            <div className=\"inner\">\r\n                <h3 className=\"masthead-brand\">Health Check - API</h3>\r\n                <nav className=\"nav nav-masthead justify-content-center\">\r\n                    <a className=\"nav-link active\">Home</a>\r\n                    <a className=\"nav-link menu-btn\">Settings</a>\r\n                    <a className=\"nav-link\" href=\"mailto:abdusshakurt@gmail.com\">Contact</a>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction AvailabilityWidget(props) {\r\n    var progressBarWidth = { width: props.widgetDetails.availability + \"%\" };\r\n    var metadata = props.widgetDetails.metadata;\r\n    var [seconds, setSeconds] = useState(Number(props.widgetDetails.lastUpdated.split(\" \")[0]));\r\n\r\n    useEffect(() => {\r\n        const intervalTimer = setInterval(() => {\r\n            seconds = seconds + 1;\r\n            setSeconds(seconds);\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(intervalTimer);\r\n            setSeconds(Number(props.widgetDetails.lastUpdated.split(\" \")[0]));\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card mb-3 bg-dark container-fluid\">\r\n            <div className=\"card-header\">\r\n                <div className=\"d-flex bd-highlight\">\r\n                    <div className=\"p-2 flex-grow-1 bd-highlight\">\r\n                        <p className=\"card-text text-left\">{props.widgetDetails.team}</p>\r\n                    </div>\r\n                    <div className=\"p-2 bd-highlight\">\r\n                        <p className=\"card-text text-right\">Test Environment <span className={'badge badge-' + props.widgetDetails.envBatch}>{props.widgetDetails.environment}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md\">\r\n                            <h5 className=\"card-title text-left\">{props.widgetDetails.apiName}    <span\r\n                                className={'badge badge-pill badge-' + props.widgetDetails.statusBatch}>{props.widgetDetails.status}</span></h5>\r\n                        </div>\r\n                        <div className=\"col-md\">\r\n                            <p className=\"card-text text-right\">{props.widgetDetails.key}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container-fluid p-3\">\r\n                    <div className=\"row pb-3\">\r\n                        <div className=\"col\">\r\n                            <p className=\"card-text text-left\">{props.widgetDetails.description}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"progress ml-3\">\r\n                    <div className={'progress-bar bg-' + props.widgetDetails.progressBar + ' progress-bar-striped progress-bar-animated'}\r\n                        role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                        style={progressBarWidth}></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex bd-highlight\">\r\n                    <div className=\"p-2 flex-grow-1 bd-highlight\">\r\n                        <p className=\"card-text text-left pl-2 \">API Availability<br />{props.widgetDetails.availability} % Uptime</p>\r\n                    </div>\r\n                    <div className=\"p-2 bd-highlight\">\r\n                        <p className=\"card-text text-right\">Total Hits<br />{props.widgetDetails.totalHits}</p>\r\n                    </div>\r\n                    <div className=\"p-2 bd-highlight\">\r\n                        <p className=\"card-text text-right\">Success Hits<br />{props.widgetDetails.successHits}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"card-text\"><small className=\"text-muted\">Last updated {seconds} Seconds ago</small></p>\r\n                <p>\r\n                    <button className=\"btn btn-white btn-outline-success\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target={\"#\" + props.widgetDetails.key} aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                        View More Info\r\n                        </button>\r\n                </p>\r\n                <div className=\"collapse\" id={props.widgetDetails.key}>\r\n                    <div className=\"card card-body bg-info bg-gradient-light text-light\">\r\n                        {metadata.map(data => (<p className=\"card-text text-left\" key={data.attribute} >{data.attribute}<br />{data.value} </p>))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AvailabilityWidget;","import axios from 'axios';\r\n\r\nfunction createInstance() {\r\n    return axios;\r\n}\r\n\r\nfunction getCreateInstanceWithDefaults(){\r\n    // var localUrl = \"http://localhost:8083/test\";\r\n    const herokuUrl = \"https://api-dashboard-backend.herokuapp.com/test\";\r\n    createInstance().defaults.baseURL = herokuUrl;\r\n    return createInstance();\r\n}\r\n\r\nexport function get(url){\r\n    return getCreateInstanceWithDefaults().get(url);\r\n}\r\n\r\nexport function request(options){\r\n    return getCreateInstanceWithDefaults().request(options);\r\n}","class Constants {\r\n    static DEFAULT_ENVIRONMENT = \"it1\";\r\n}\r\n\r\nexport default Constants;","import {get,request} from './xhr/index'\r\nimport Constants from \"../constants/configurations\"\r\n\r\nexport class WidgetAdapter {\r\n\r\n    static env = Constants.DEFAULT_ENVIRONMENT;\r\n\r\n    static updateFunction;\r\n\r\n    static async callWidgetDetails(updateFunction){\r\n        var options1 = {url: '/ui-details',headers:{'env': this.env},method:'post'};\r\n        this.updateFunction = updateFunction;\r\n        request(options1).then(json=>updateFunction(json.data));\r\n    }\r\n\r\n    static async getEnvironmentList(setEnvList){\r\n        get('/environments').then(res=>{setEnvList({data:res.data});});\r\n    }\r\n\r\n    static setEnvironment(environment){\r\n        this.env = environment;\r\n        if(this.updateFunction){\r\n            this.callWidgetDetails(this.updateFunction);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WidgetAdapter;","import AvailabilityWidget from './availabilityWidget'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Profile from '../resources/preloadedData';\r\nimport WidgetAdapter from '../adapters/widgetAdapter'\r\nimport Constants from \"../constants/configurations\"\r\n\r\nfunction WidgetHolder() {\r\n\r\n    var [widgetData, setwidgetData] = useState(Profile);\r\n    \r\n    useEffect(() => {\r\n        const interval = process.env.REACT_APP_WIDGET_POLLING_INTERVAL;\r\n        WidgetAdapter.callWidgetDetails(setwidgetData,Constants.DEFAULT_ENVIRONMENT);\r\n        const periodicalFetch = setInterval(()=>WidgetAdapter.callWidgetDetails(setwidgetData,Constants.DEFAULT_ENVIRONMENT), interval);\r\n        return () => { clearInterval(periodicalFetch);};\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <main role=\"main\" className=\"inner cover\">\r\n            {widgetData.map(data1 => (<AvailabilityWidget widgetDetails={data1} key={data1.key+data1.lastUpdated} />))}\r\n        </main>\r\n    );\r\n\r\n}\r\n\r\nexport default WidgetHolder;","import { useState, useEffect } from 'react';\r\nimport WidgetAdapter from '../adapters/widgetAdapter';\r\n\r\nfunction SidePane() {\r\n\r\n    var [envList, setEnvList] = useState({ data: [{ name: \"IT\", env: [\"IT1\", \"IT2\"] }] });\r\n\r\n    useEffect(() => {\r\n        WidgetAdapter.getEnvironmentList(setEnvList);\r\n    }, []);\r\n\r\n    var setEnvironment = (value) => {\r\n        WidgetAdapter.setEnvironment(value.target.name);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"pushy pushy-left text-left\" data-focus=\"#first-link\" id=\"sidebar\">\r\n            <div className=\"pushy-content\">\r\n                <div className=\"sidebar-header\">\r\n                    <h3 className=\"text-center\">DIY Dashboard</h3>\r\n                </div>\r\n                <ul className=\"lisst-unstyled components\">\r\n                    <p>Related Links</p>\r\n                    <li className=\"active\">\r\n                        <a href=\"#teams-dropdown\" data-toggle=\"collapse\" aria-expanded=\"false\"\r\n                            className=\"dropdown-toggle\">Teams</a>\r\n                        <ul className=\"collapse lisst-unstyled\" id=\"teams-dropdown\">\r\n                            <li><a>Customer Dashboard</a></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"active\">\r\n                        <a href=\"#env-dropdown\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">API Availability</a>\r\n                        <ul className=\"collapse lisst-unstyled\" id=\"env-dropdown\">\r\n                            {envList.data.map(envObject => (\r\n                                <li className=\"active\">\r\n                                    <a href={'#env-drop' + envObject.name} data-toggle=\"collapse\" aria-expanded=\"false\"\r\n                                        className=\"dropdown-toggle\">{envObject.name}</a>\r\n                                    <ul className=\"collapse lisst-unstyled\" id={'env-drop' + envObject.name}>\r\n                                        {envObject.env.map(envVariable => (<li><a href=\"#\" name={envVariable} onClick={setEnvironment}>{envVariable}</a></li>))}\r\n                                    </ul>\r\n                                </li>))}\r\n\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">Contact</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">About Me</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default SidePane;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../styles/pushy.css';\r\nimport '../../styles/style.css';\r\nimport '../../styles/cover.css';\r\n\r\nimport NavBar from '../../components/navbar';\r\nimport WidgetHolder from \"../../components/WidgetHolder\"\r\nimport SidePane from \"../../components/sidePane\"\r\nimport ScriptTag from 'react-script-tag';\r\n\r\nimport React from \"react\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"text-center content-holder\">\r\n      <SidePane />\r\n      <div className=\"site-overlay\"></div>\r\n      <div className=\"cover-container d-flex p-2 bd-highlight mx-auto flex-column\">\r\n        <NavBar />\r\n        <WidgetHolder />\r\n        <footer className=\"mastfoot mt-auto\">\r\n          <div className=\"inner\">\r\n            <p>API Availability dashboard for <a href=\"#\">DIY</a>, by <a\r\n              href=\"https://instagram.com/shakur427\">Abdus Shakur</a>.</p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      <ScriptTag type=\"text/javascript\" src=\"pushy.js\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from './pages/homepage/homepage';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HomePage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}